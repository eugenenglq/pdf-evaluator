AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: CloudFormation template for API Gateway WebSocket API and Lambda functions for streaming Bedrock responses

Resources:
  # DynamoDB table to store WebSocket connections
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: healthcare-demo-connections
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: connectionId
          AttributeType: S
      KeySchema:
        - AttributeName: connectionId
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  # WebSocket API Gateway
  WebSocketAPI:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: BedrockStreamingWebSocketAPI
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action

  # WebSocket API Stage
  WebSocketAPIStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref WebSocketAPI
      StageName: prod
      AutoDeploy: true

  # WebSocket Connection Lambda Function
  WebSocketConnectionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/websocket-connection
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 30
      MemorySize: 128
      Environment:
        Variables:
          CONNECTIONS_TABLE_NAME: !Ref ConnectionsTable
          PROCESS_IMAGE_FUNCTION: !Ref BedrockImageProcessFunction
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTable
        - LambdaInvokePolicy:
            FunctionName: !Ref BedrockImageProcessFunction

  # Lambda function for sending messages via WebSocket
  WebSocketSendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/websocket-send-message
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 30
      MemorySize: 128
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - 'execute-api:ManageConnections'
            Resource: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketAPI}/*'

  # Update the BedrockImageProcessFunction permissions and environment
  BedrockImageProcessFunctionUpdates:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/process-image-bedrock
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 300
      MemorySize: 256
      Environment:
        Variables:
          LOG_LEVEL: INFO
          WEBSOCKET_SEND_MESSAGE_FUNCTION: !GetAtt WebSocketSendMessageFunction.Arn
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
                - bedrock:InvokeModelWithResponseStream
              Resource: '*'
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: !GetAtt WebSocketSendMessageFunction.Arn

  # WebSocket Connect Route
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketAPI
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectIntegration

  # WebSocket Connect Integration
  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketAPI
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WebSocketConnectionFunction.Arn}/invocations

  # WebSocket Disconnect Route
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketAPI
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectIntegration

  # WebSocket Disconnect Integration
  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketAPI
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WebSocketConnectionFunction.Arn}/invocations

  # WebSocket Process Image Route
  ProcessImageRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketAPI
      RouteKey: processImage
      AuthorizationType: NONE
      OperationName: ProcessImageRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ProcessImageIntegration

  # WebSocket Process Image Integration
  ProcessImageIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketAPI
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WebSocketConnectionFunction.Arn}/invocations

  # Lambda permission for WebSocket API to invoke WebSocketConnectionFunction (Connect)
  ConnectPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref WebSocketConnectionFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketAPI}/*/$connect

  # Lambda permission for WebSocket API to invoke WebSocketConnectionFunction (Disconnect)
  DisconnectPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref WebSocketConnectionFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketAPI}/*/$disconnect

  # Lambda permission for WebSocket API to invoke WebSocketConnectionFunction (Process Image)
  ProcessImagePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref WebSocketConnectionFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketAPI}/*/processImage

Outputs:
  WebSocketURL:
    Description: "URL for WebSocket connections"
    Value: !Sub wss://${WebSocketAPI}.execute-api.${AWS::Region}.amazonaws.com/${WebSocketAPIStage}